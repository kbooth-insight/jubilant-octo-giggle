---
- name: Install Consul Binary - Local
  block:
    - name: Copy local binary to remote
      copy:
        src: "{{local_enterprise_binary_dir}}/consul"
        dest: "{{install_dir}}"
        owner: "{{install_owner}}"
        group: "{{install_group}}"
        mode: +x
  when: local_binaries

- name: Install Consul Binary - Remote
  block:
    - name: Get latest consul binary location
      local_action: command python3 ./get_enterprise_url.py -p consul
      become: no
      register: latest_consul
    - name: Download consul
      get_url:
        url: "{{latest_consul.stdout}}"
        dest: /tmp/consul.zip
    - name: Unzip consul and put in path
      unarchive:
        src: /tmp/consul.zip
        dest: "{{install_dir}}"
        mode: +x
        owner: "{{install_owner}}"
        group: "{{install_group}}"
        remote_src: yes
        # force: yes
  when: not local_binaries

- name: Check if Consul is present before proceeding
  command: "{{install_dir}}/consul -v"
  register: consul_v

- name: Print Consul version
  debug:
    var: consul_v.stdout

# configure systemd and consul config
- name: Add the user 'consul'
  user:
    name: consul
    comment: Create a unique non privileged system user to run Consul
    system: yes
    home: "{{consul_config_dir}}"
    shell: /bin/false

- name: Create data and config directories
  file:
    path: "{{item}}"
    state: directory
    owner: consul
    group: consul
  with_items:
    - [
        "{{consul_data_dir}}",
        "{{consul_config_dir}}",
        "{{consul_server_config_dir}}",
        "{{consul_client_config_dir}}",
      ]

# Consul Server
- name: Create Consul 'server' systemd service file
  template:
    src: consul-server.service.j2
    dest: "{{systemd_dir}}/consul-server.service"
    owner: consul
    group: consul

- name: Create Consul 'server' config
  template:
    src: consul-server.hcl.j2
    dest: "{{consul_server_config_dir}}/__consul.hcl"
    owner: consul
    group: consul
    mode: 0640

- name: Check on Consul 'server' service
  systemd:
    name: consul-server.service
    state: stopped
    enabled: no

# Consul Client
- name: Create Consul 'client' systemd service file
  template:
    src: consul-client.service.j2
    dest: "{{systemd_dir}}/consul-client.service"
    owner: consul
    group: consul

- name: Create Consul 'client' config
  template:
    src: consul-client.hcl.j2
    dest: "{{consul_client_config_dir}}/__consul.hcl"
    owner: consul
    group: consul
    mode: 0640

- name: Check on Consul 'client' service
  systemd:
    name: consul-client.service
    state: stopped
    enabled: no
